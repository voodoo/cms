<script type="text/javascript">


var map = L.mapbox.map('map', 'mapbox.streets')
    .setView([29.5,-98.5], 10);


var geojson = [
      {
        "type": "FeatureCollection",
        "features": [

<% @contacts.each do |contact| %>

	{
	    // this feature is in the GeoJSON format: see geojson.org
	    // for the full specification
	    type: 'Feature',
	    geometry: {
	        type: 'Point',
	        // coordinates here are in longitude, latitude order because
	        // x, y is the standard for GeoJSON and many formats
	        coordinates: [
	          <%= contact.longitude %>,
	          <%= contact.latitude %>
	        ]
	    },
	    properties: {
	        title: "<%= contact.full_name %>",
	        address: "<%= contact.address %>",
	        contact_name: "<%= contact.full_name %>",
	        contact_id: "<%= contact.id %>",
	        // one can customize markers by adding simplestyle properties
	        // https://www.mapbox.com/guides/an-open-platform/#simplestyle
	        'marker-size': 'large',
	        'marker-color': '#BE9A6B',
	        'marker-symbol': 'star'
	    }
	} <% unless contact === @contacts.last %>,<%end%>

<% end %>
  ]}];


map.scrollWheelZoom.disable();

  var listings = document.getElementById('listings');
  var locations = L.mapbox.featureLayer().addTo(map);

  locations.setGeoJSON(geojson);

  function setActive(el) {
    var siblings = listings.getElementsByTagName('div');
    for (var i = 0; i < siblings.length; i++) {
      siblings[i].className = siblings[i].className
      .replace(/active/, '').replace(/\s\s*$/, '');
    }

    el.className += ' active';
  }

  locations.eachLayer(function(locale) {

    // Shorten locale.feature.properties to just `prop` so we're not
    // writing this long form over and over again.
    var prop = locale.feature.properties;

    // Each marker on the map.
    var popup = '<h3>' + prop.contact_name + '</h3><div>' + prop.address + "</div>"

    var listing = listings.appendChild(document.createElement('div'));
    listing.className = 'item';

    var link = listing.appendChild(document.createElement('a'));
    link.href = '#';
    link.className = 'title';

    link.innerHTML = prop.address;
    if (prop.crossStreet) {
      link.innerHTML += '<br /><small class="quiet">' + prop.crossStreet + '</small>';
      popup += '<br /><small class="quiet">' + prop.crossStreet + '</small>';
    }

    var details = listing.appendChild(document.createElement('div'));
    details.innerHTML = "<a href='/mblz/contacts/" + prop.contact_id + "'>" + prop.contact_name + "</a>";
    if (prop.phone) {
      details.innerHTML += ' &middot; ' + prop.phoneFormatted;
    }

    link.onclick = function() {
      setActive(listing);

      // When a menu item is clicked, animate the map to center
      // its associated locale and open its popup.
      map.setView(locale.getLatLng(), 16);
      locale.openPopup();
      return false;
    };

    // Marker interaction
    locale.on('click', function(e) {
      // 1. center the map on the selected marker.
      map.panTo(locale.getLatLng());

      // 2. Set active the markers associated listing.
      setActive(listing);
    });

    popup += '</div>';
    locale.bindPopup(popup);

    locale.setIcon(L.icon({
      iconUrl: '/images/icon/home.png',
      iconSize: [38, 38],
      iconAnchor: [28, 28],
      popupAnchor: [0, -34]
    }));

});

</script>